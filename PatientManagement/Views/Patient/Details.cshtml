@model PatientManagement.Models.Patient

@{
    ViewData["Title"] = "Details";
}

<div class="px-6">
    <h2 class="text-2xl font-bold mb-4 text-center">Patient Details</h2>
    <p><strong>Name:</strong> @Model.Name</p>
    <p><strong>Mobile:</strong> @Model.Mobile</p>
    <p><strong>Address:</strong> @Model.Address</p>
    <p><strong>Symptoms:</strong> @Model.Symptoms</p>

    <div class="mt-6">
        <h3 class="text-xl font-semibold mb-2">Medicine History</h3>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            <!-- 🩺 Medicine Table -->
            <div class="md:col-span-2">
                <table class="min-w-full border text-center">
                    <thead>
                        <tr class="bg-gray-200">
                            <th class="px-4 py-2">Date</th>
                            <th class="px-4 py-2">Medicine Details</th>
                            <th class="px-4 py-2">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var medicine in Model.Medicines)
                        {
                            <tr class="border-b" id="medicine-row-@medicine.Id">
                                @* <td class="px-4 py-2">@medicine.Date.ToShortDateString()</td> *@
                                <td class="px-4 py-2">@medicine.Date</td>
                                <td class="px-4 py-2">@medicine.Description</td>
                                <td class="px-4 py-2">
                                    <!-- Edit Icon -->
                                    <a href="/Medicine/Edit/@medicine.Id"
                                       class="text-blue-600 hover:text-blue-800"
                                       title="Edit">
                                        <i data-lucide="pencil" class="w-5 h-5 inline-block"></i>
                                    </a>

                                    <!-- Delete Icon -->
                                    <button type="button"
                                            onclick="openDeleteModal(@medicine.Id)"
                                            class="text-red-600 hover:text-red-800 ml-2"
                                            title="Delete">
                                        <i data-lucide="trash-2" class="w-5 h-5 inline-block"></i>
                                    </button>
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- 📝 Add Medicine Form with Back Button -->
            <div>
                <form asp-controller="Medicine" asp-action="Create" method="post">
                    <input type="hidden" name="PatientId" value="@Model.Id" />

                    <textarea name="Description" rows="3"
                              class="w-full border rounded px-3 py-2 resize-none"
                              placeholder="Add new medicine description..."></textarea>

                    <div class="flex space-x-2">
                        <button type="submit"
                                class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">
                            ➕ Add Medicine
                        </button>

                        <a asp-action="Index"
                           class="bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700 inline-flex items-center">
                            ⬅ Back to List
                        </a>
                    </div>
                </form>
            </div>

        </div>

        <!-- Delete Modal -->
        <div id="deleteModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
            <div class="bg-white rounded p-6 w-full max-w-md shadow-lg">
                <h2 class="text-xl font-bold mb-2 text-red-600">Delete Confirmation</h2>
                <p id="modalText" class="mb-4">Are you sure you want to delete?</p>
                <div class="flex justify-center space-x-4">
                    <button onclick="closeDeleteModal()" class="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded">Cancel</button>
                    <button onclick="confirmDelete()" class="px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded">Delete</button>
                </div>
            </div>
        </div>

    </div>
</div>


<!-- Toast Notification -->
<div id="toastSuccess" class="fixed bottom-6 right-6 bg-green-600 text-white px-4 py-3 rounded shadow-lg hidden z-50">
    Medicine deleted successfully.
</div>


@section Scripts {
    <script>
        lucide.createIcons(); // activate Lucide icons
        let selectedMedicineId = null;

        function openDeleteModal(id) {
            selectedMedicineId = id; 
            document.getElementById("modalText").textContent = `Are you sure you want to delete this medicine?`;
            document.getElementById("deleteModal").classList.remove("hidden");
            document.getElementById("deleteModal").classList.add("flex");
        }

        function closeDeleteModal() {
            selectedMedicineId = null;
            document.getElementById("deleteModal").classList.add("hidden");
            document.getElementById("deleteModal").classList.remove("flex");
        }

        async function confirmDelete() {
            if (!selectedMedicineId) return;

            try {
                const response = await fetch(`/Medicine/DeleteAjax/${selectedMedicineId}`, {
                    method: 'DELETE',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });

                if (response.ok) {
                    document.getElementById(`medicine-row-${selectedMedicineId}`).remove();
                    showToast("Medicine deleted successfully");
                    closeDeleteModal();
                } else {
                    alert("Failed to delete. Try again.");
                }
            } catch (err) {
                console.error("AJAX delete error:", err);
                alert("Error deleting medicine.");
            }
        }

        function showToast(message) {
            const toast = document.getElementById("toastSuccess");
            toast.textContent = message;
            toast.classList.remove("hidden");

            setTimeout(() => {
                toast.classList.add("hidden");
            }, 3000);
        }
    </script>
}
